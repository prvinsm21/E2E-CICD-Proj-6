pipeline {
    agent any
    environment {
        DOCKERHUB_USERNAME = "prvinsm21"
    }
    stages {
        stage ('Git Checkout') {
            steps {
                sh 'echo Passed'
            }
        }
        stage ('Code Compile') {
            steps {
                sh 'cd Resturant-Website && mvn clean compile'
            }
        }
        stage ('Unit Testing') {
            steps {
                sh 'cd Resturant-Website && mvn test'
            }
        }
        stage ('Integration Testing') {
            steps {
                sh 'cd Resturant-Website  && mvn verify -DskipUnitTests'
            }
        }
        stage ('Build Stage') {
            steps {
                sh 'cd Resturant-Website  && mvn clean install'
            }
        }
        
        stage ('Static Code analysis') {
            steps {
                script {
                    withSonarQubeEnv(credentialsId: 'sonar-api') {
                        sh 'cd Resturant-Website && mvn clean package sonar:sonar'
                    }
                }
            }
        }
        stage('OWASP Dependency Check') {
            steps {
               dependencyCheck additionalArguments: '--scan Resturant-Website/', odcInstallation: 'DP'
               dependencyCheckPublisher pattern: '--format HTML --format XML'
               publishHTML([allowMissing: false, alwaysLinkToLastBuild: true, reportDir: 'Resturant-Website/target/dependency-check-report', reportFiles: 'dependency-check-report.html', reportName: 'Dependency-Check Report'])

            }
        }
        stage ('Quality Gate Status') {
            steps {
                script {
                    waitForQualityGate abortPipeline: false, credentialsId: 'sonar-api'
                }
            }
        }
    }
}