pipeline {
    agent any
    environment {
        DOCKERHUB_USERNAME = "prvinsm21"
        DOCKERHUB_CREDENTIALS = credentialsId('dockerhub')
        DOCKER_IMAGE = "prvinsm21/resturant-website:${BUILD_NUMBER}"

    }
    stages {
        stage ('Git Checkout') {
            steps {
                sh 'echo Passed'
            }
        }
        stage ('Code Compile') {
            steps {
                sh 'cd Resturant-Website && mvn clean compile'
            }
        }
        stage ('Unit Testing') {
            steps {
                sh 'cd Resturant-Website && mvn test'
            }
        }
        stage ('Integration Testing') {
            steps {
                sh 'cd Resturant-Website  && mvn verify -DskipUnitTests'
            }
        }
        stage ('Build Stage') {
            steps {
                sh 'cd Resturant-Website  && mvn clean install'
            }
        }
        
        stage ('Static Code analysis') {
            steps {
                script {
                    withSonarQubeEnv(credentialsId: 'sonar-api') {
                        sh 'cd Resturant-Website && mvn clean package sonar:sonar'
                    }
                }
            }
        }
        stage ('Quality Gate Status') {
            steps {
                script {
                    waitForQualityGate abortPipeline: false, credentialsId: 'sonar-api'
                }
            }
        }
        stage ('Build Docker file') {
            steps {
                script {
                    sh 'docker build -t ${DOCKER_IMAGE} Resturant-Website/Dockerfile'
                    def dockerImage = docker.image("${DOCKER_IMAGE}")
                    docker.withRegistry('https://index.docker.io/v1/', "dockerhub") {
                    dockerImage.push()
                }
            }
        }
        }
    }
}